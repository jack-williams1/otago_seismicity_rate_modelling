#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Mar 11 15:58:41 2024

@author: wilja48p

Filter geodetic slip rates from all NSHM faults for just those in Otago
and compare to geologic slip rates

"""

import json

import geopandas as gpd
import pandas as pd
import matplotlib.pyplot as plt

from shapely.geometry import shape
from shapely.geometry.linestring import LineString
from shapely.geometry.polygon import Polygon 
import os


os.chdir("..") #Go up one level in directory
#load NZCFM info on Otago faults
otago_fault_info=pd.read_excel('OtagoRangeBasinFaults.xlsx',sheet_name='segmented')
faultnamelist=otago_fault_info.Name2.tolist()

# load the search polygon in nshm_inversion to select sections
geojson = json.load(open('gis_files/orb_area_polygon.geojson'))
polygon: Polygon = shape(geojson['features'][0]['geometry'])

#load section area info (generated by get_rsection_area.py in nshm_inversion scripts)
sec_info=pd.read_csv('nshm_inversion/solvis/OtagoFaults/otago_section_area.csv',header=None)
sec_info_list=sec_info[0].tolist()

os.chdir("nshm_geodeticrates") #navigate back to directory
# load all fault section info from the NSHM inversion
flt_sections=gpd.read_file('fault_sections.geojson')


rigidity=3e10
contained_indx=[0] * len(flt_sections) 
geol_sr=[0] * len(flt_sections) 
geol_sr_min=[0] * len(flt_sections) 
geol_sr_max=[0] * len(flt_sections) 
sr_diff=[0] * len(flt_sections) 
mo_rate=[0] * len(flt_sections) 

#for each NSHM fault section
for ss in range(len(flt_sections)):
   
    #create shape object for each fault section
   tmp_shape: LineString=shape(flt_sections.loc[ss].geometry)
   #index all fault sections within Otago polygon 
   if polygon.contains(tmp_shape):
        contained_indx[ss]=1
        
        #Index fault section's Parent Name in Otago-NZCFM file
        tmp_indx=faultnamelist.index(flt_sections.ParentName[ss])
        #extract parent's fault slip rate (and uncertainity)
        geol_sr[ss]=otago_fault_info.SR_pref[tmp_indx]
        geol_sr_min[ss]=otago_fault_info.SR_pref[tmp_indx]-otago_fault_info.SR_min[tmp_indx]
        geol_sr_max[ss]=otago_fault_info.SR_max[tmp_indx]-otago_fault_info.SR_pref[tmp_indx]
        #calculate difference in geologic and geodetic slip rates
        sr_diff[ss]=flt_sections.SlipRate[ss]-geol_sr[ss]
        
        #derive moment rate of source by indexgin area from sec_info
        tmp_indx=sec_info_list.index(flt_sections.FaultID[ss])
        mo_rate[ss]=flt_sections.SlipRate[ss]*10e-4*rigidity*sec_info[1][tmp_indx]
        

#extract index values in contained_indx where Otago fault was identified
otago_indx=[i for i, n in enumerate(contained_indx) if n == 1]
otago_geol_sr=[geol_sr[i] for i in otago_indx]
otago_geol_sr_min=[geol_sr_min[i] for i in otago_indx]
otago_geol_sr_max=[geol_sr_max[i] for i in otago_indx]
otago_sr_diff=[sr_diff[i] for i in otago_indx]
otago_mo_rate=[mo_rate[i] for i in otago_indx]

#filter flt_sections GeoDataFrame using the Otago indicies
gdf = gpd.GeoDataFrame(flt_sections.loc[otago_indx])
#add geologic slip rate and SR differences to geodataframe
gdf.insert(14,"geol_SlipRate",otago_geol_sr)
gdf.insert(15,"slip_rate_diff",otago_sr_diff)
gdf.insert(16,"mo_rate",otago_mo_rate)

#%% Make errorbard scatter plot for geodetic vs geologic slip rate

error_plot_max=1.75

plt.errorbar(otago_geol_sr,gdf.SlipRate,xerr=[otago_geol_sr_min,otago_geol_sr_max],yerr=gdf.SlipRateStdDev,linewidth=0.7,fmt='s')
plt.xlabel('geologic slip rate (mm/yr)')
plt.ylabel('geodetic slip rate (mm/yr)')
plt.xlim(0,error_plot_max)
plt.ylim(0,error_plot_max)
plt.plot([0,error_plot_max],[0,error_plot_max],'k--',linewidth=1.0)

plt.gca().set_aspect('equal', adjustable='box')

#%% Export to geojson 
#NEED TO DO THIS TO CREATE GEODETIC BASED RECURRENCE MODELS FOR STOCHASTIC CATALOGS

gdf.to_file("otago_sections_geodetic_rates.geojson",driver="GeoJSON")
